// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ModifySpendlimitCardDetail struct {
	SpendLimit *float64 `json:"spendLimit,omitempty"`
	Status     *string  `json:"status,omitempty"`
	Validity   *float64 `json:"validity,omitempty"`
}

func (o *ModifySpendlimitCardDetail) GetSpendLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.SpendLimit
}

func (o *ModifySpendlimitCardDetail) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ModifySpendlimitCardDetail) GetValidity() *float64 {
	if o == nil {
		return nil
	}
	return o.Validity
}

type ModifySpendlimitRequestBody struct {
	CardDetail         *ModifySpendlimitCardDetail `json:"cardDetail,omitempty"`
	MerchantCustomerID *string                     `json:"merchantCustomerID,omitempty"`
}

func (o *ModifySpendlimitRequestBody) GetCardDetail() *ModifySpendlimitCardDetail {
	if o == nil {
		return nil
	}
	return o.CardDetail
}

func (o *ModifySpendlimitRequestBody) GetMerchantCustomerID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantCustomerID
}

type ModifySpendlimitRequest struct {
	// Unique, hyphen-separated alphanumeric string. We recommend the UUID algorithm, an industry standard that guarantees a high degree of uniqueness length 14 to 36 characters.
	ACorrelationID string `header:"style=simple,explode=false,name=A-Correlation-ID"`
	// Unique Merchant Code provided by Ayoconnect.
	AMerchantCode string `header:"style=simple,explode=false,name=A-Merchant-Code"`
	// Unique Card ID returned in Issue card API
	CardID      string                       `pathParam:"style=simple,explode=false,name=cardID"`
	RequestBody *ModifySpendlimitRequestBody `request:"mediaType=application/json"`
}

func (o *ModifySpendlimitRequest) GetACorrelationID() string {
	if o == nil {
		return ""
	}
	return o.ACorrelationID
}

func (o *ModifySpendlimitRequest) GetAMerchantCode() string {
	if o == nil {
		return ""
	}
	return o.AMerchantCode
}

func (o *ModifySpendlimitRequest) GetCardID() string {
	if o == nil {
		return ""
	}
	return o.CardID
}

func (o *ModifySpendlimitRequest) GetRequestBody() *ModifySpendlimitRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

// ModifySpendlimitResponseCardDetail - Card deatils
type ModifySpendlimitResponseCardDetail struct {
	// Available balance on the card
	AvailableBalance *float64 `json:"availableBalance,omitempty"`
	// Unique card ID
	CardID *string `json:"cardID,omitempty"`
	// Initial limit of Card
	CumulativeLimit *float64 `json:"cumulativeLimit,omitempty"`
	// Remaining balance after card is deactivated
	DeactivatedBalance *float64 `json:"deactivatedBalance,omitempty"`
	// Expiry of card in YYMM format
	Expiry *string `json:"expiry,omitempty"`
	// Masked card number
	MaskedCard *string `json:"maskedCard,omitempty"`
	// Status of the card
	Status *string `json:"status,omitempty"`
}

func (o *ModifySpendlimitResponseCardDetail) GetAvailableBalance() *float64 {
	if o == nil {
		return nil
	}
	return o.AvailableBalance
}

func (o *ModifySpendlimitResponseCardDetail) GetCardID() *string {
	if o == nil {
		return nil
	}
	return o.CardID
}

func (o *ModifySpendlimitResponseCardDetail) GetCumulativeLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.CumulativeLimit
}

func (o *ModifySpendlimitResponseCardDetail) GetDeactivatedBalance() *float64 {
	if o == nil {
		return nil
	}
	return o.DeactivatedBalance
}

func (o *ModifySpendlimitResponseCardDetail) GetExpiry() *string {
	if o == nil {
		return nil
	}
	return o.Expiry
}

func (o *ModifySpendlimitResponseCardDetail) GetMaskedCard() *string {
	if o == nil {
		return nil
	}
	return o.MaskedCard
}

func (o *ModifySpendlimitResponseCardDetail) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

// ModifySpendlimitResponseBody - Successful Card Modify
type ModifySpendlimitResponseBody struct {
	// Card deatils
	CardDetail *ModifySpendlimitResponseCardDetail `json:"cardDetail,omitempty"`
	// Unique code.
	Code *float64 `json:"code,omitempty"`
	// Unique customer ID
	MerchantCustomerID *string `json:"merchantCustomerID,omitempty"`
	// Description of the response code.
	Message *string `json:"message,omitempty"`
	// Exact TimeStamp of the response in Unix Nanoseconds format.
	ResponseTime *string `json:"responseTime,omitempty"`
}

func (o *ModifySpendlimitResponseBody) GetCardDetail() *ModifySpendlimitResponseCardDetail {
	if o == nil {
		return nil
	}
	return o.CardDetail
}

func (o *ModifySpendlimitResponseBody) GetCode() *float64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *ModifySpendlimitResponseBody) GetMerchantCustomerID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantCustomerID
}

func (o *ModifySpendlimitResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ModifySpendlimitResponseBody) GetResponseTime() *string {
	if o == nil {
		return nil
	}
	return o.ResponseTime
}

type ModifySpendlimitResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successful Card Modify
	Object *ModifySpendlimitResponseBody
}

func (o *ModifySpendlimitResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ModifySpendlimitResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ModifySpendlimitResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ModifySpendlimitResponse) GetObject() *ModifySpendlimitResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
