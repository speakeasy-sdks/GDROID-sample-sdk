// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// IssueCardAPIRequestBodyCardDetail - Card deatils object
type IssueCardAPIRequestBodyCardDetail struct {
	// Specifies the spending limit for the issuing card.
	SpendLimit *float64 `json:"spendLimit,omitempty"`
	// Specifies the validity in number of months for the issuing card. 1 to 24
	Validity *float64 `json:"validity,omitempty"`
}

func (o *IssueCardAPIRequestBodyCardDetail) GetSpendLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.SpendLimit
}

func (o *IssueCardAPIRequestBodyCardDetail) GetValidity() *float64 {
	if o == nil {
		return nil
	}
	return o.Validity
}

type IssueCardAPIRequestBody struct {
	// Card deatils object
	CardDetail IssueCardAPIRequestBodyCardDetail `json:"cardDetail"`
	// Customer email.
	Email string `json:"email"`
	// Customer name. Only contains alphabets. limited to length from 2-20
	FullName string `json:"fullName"`
	// Customer Driving license/passport/NIK/etc. minimum 5 and maximum 20 alphanumeric characters
	GovernmentID string `json:"governmentID"`
	// Customer phone number. It should start with the your country code ( min 1 and max 3 digits ) followed by an hyphen (-) and phone number with at least 7 and at most 15 numeric characters. 7 ≤ length ≤ 15
	Phone string `json:"phone"`
}

func (o *IssueCardAPIRequestBody) GetCardDetail() IssueCardAPIRequestBodyCardDetail {
	if o == nil {
		return IssueCardAPIRequestBodyCardDetail{}
	}
	return o.CardDetail
}

func (o *IssueCardAPIRequestBody) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *IssueCardAPIRequestBody) GetFullName() string {
	if o == nil {
		return ""
	}
	return o.FullName
}

func (o *IssueCardAPIRequestBody) GetGovernmentID() string {
	if o == nil {
		return ""
	}
	return o.GovernmentID
}

func (o *IssueCardAPIRequestBody) GetPhone() string {
	if o == nil {
		return ""
	}
	return o.Phone
}

type IssueCardAPIRequest struct {
	// Unique, hyphen-separated alphanumeric string. We recommend the UUID algorithm, an industry standard that guarantees a high degree of uniqueness length 14 to 36 characters.
	ACorrelationID string `header:"style=simple,explode=false,name=A-Correlation-ID"`
	// Unique Merchant Code provided by Ayoconnect.
	AMerchantCode string                   `header:"style=simple,explode=false,name=A-Merchant-Code"`
	RequestBody   *IssueCardAPIRequestBody `request:"mediaType=application/json"`
}

func (o *IssueCardAPIRequest) GetACorrelationID() string {
	if o == nil {
		return ""
	}
	return o.ACorrelationID
}

func (o *IssueCardAPIRequest) GetAMerchantCode() string {
	if o == nil {
		return ""
	}
	return o.AMerchantCode
}

func (o *IssueCardAPIRequest) GetRequestBody() *IssueCardAPIRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

// IssueCardAPI201ApplicationJSONCardDetail - Card deatils
type IssueCardAPI201ApplicationJSONCardDetail struct {
	// Available balance on the card
	AvailableBalance *float64 `json:"availableBalance,omitempty"`
	// Unique card ID
	CardID *string `json:"cardID,omitempty"`
	// Initial limit of Card
	CumulativeLimit *float64 `json:"cumulativeLimit,omitempty"`
	// Remaining balance after card is deactivated
	DeactivatedBalance *float64 `json:"deactivatedBalance,omitempty"`
	// Expiry of card in YYMM format
	Expiry *string `json:"expiry,omitempty"`
	// Masked card number
	MaskedCard *string `json:"maskedCard,omitempty"`
	// Status of the card
	Status *string `json:"status,omitempty"`
}

func (o *IssueCardAPI201ApplicationJSONCardDetail) GetAvailableBalance() *float64 {
	if o == nil {
		return nil
	}
	return o.AvailableBalance
}

func (o *IssueCardAPI201ApplicationJSONCardDetail) GetCardID() *string {
	if o == nil {
		return nil
	}
	return o.CardID
}

func (o *IssueCardAPI201ApplicationJSONCardDetail) GetCumulativeLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.CumulativeLimit
}

func (o *IssueCardAPI201ApplicationJSONCardDetail) GetDeactivatedBalance() *float64 {
	if o == nil {
		return nil
	}
	return o.DeactivatedBalance
}

func (o *IssueCardAPI201ApplicationJSONCardDetail) GetExpiry() *string {
	if o == nil {
		return nil
	}
	return o.Expiry
}

func (o *IssueCardAPI201ApplicationJSONCardDetail) GetMaskedCard() *string {
	if o == nil {
		return nil
	}
	return o.MaskedCard
}

func (o *IssueCardAPI201ApplicationJSONCardDetail) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

// IssueCardAPI201ApplicationJSON - Successful Card Issuance
type IssueCardAPI201ApplicationJSON struct {
	// Card deatils
	CardDetail *IssueCardAPI201ApplicationJSONCardDetail `json:"cardDetail,omitempty"`
	// Unique code.
	Code *float64 `json:"code,omitempty"`
	// Unique customer ID
	MerchantCustomerID *string `json:"merchantCustomerID,omitempty"`
	// Description of the response code.
	Message *string `json:"message,omitempty"`
	// Exact TimeStamp of the response in Unix Nanoseconds format.
	ResponseTime *string `json:"responseTime,omitempty"`
}

func (o *IssueCardAPI201ApplicationJSON) GetCardDetail() *IssueCardAPI201ApplicationJSONCardDetail {
	if o == nil {
		return nil
	}
	return o.CardDetail
}

func (o *IssueCardAPI201ApplicationJSON) GetCode() *float64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *IssueCardAPI201ApplicationJSON) GetMerchantCustomerID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantCustomerID
}

func (o *IssueCardAPI201ApplicationJSON) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *IssueCardAPI201ApplicationJSON) GetResponseTime() *string {
	if o == nil {
		return nil
	}
	return o.ResponseTime
}

type IssueCardAPIResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successful Card Issuance
	IssueCardAPI201ApplicationJSONObject *IssueCardAPI201ApplicationJSON
}

func (o *IssueCardAPIResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *IssueCardAPIResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *IssueCardAPIResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *IssueCardAPIResponse) GetIssueCardAPI201ApplicationJSONObject() *IssueCardAPI201ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.IssueCardAPI201ApplicationJSONObject
}
